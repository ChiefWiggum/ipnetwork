<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.3;net45;net46;net47;net48;netcoreapp3.1;net5.0;net6.0</TargetFrameworks>
    <TargetFrameworks Condition="'$(OS)' != 'Windows_NT'">netstandard1.3</TargetFrameworks> 
	<PackageId>IPNetwork2</PackageId>
    <PackageVersion>2.1.3</PackageVersion>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <PackageLicenseUrl>https://github.com/lduchosal/ipnetwork/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/lduchosal/ipnetwork</PackageProjectUrl>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>dotnetstandard1.3  support
dotnet46 support
dotnet45 support
dotnet40 support
signed dlls</PackageReleaseNotes>
    <PackageTags>ipnetwork network ip ipv4 ipv6 netmask cidr subnet subnetting supernet supernetting calculation</PackageTags>

    <Title>IPNetwork utility classes for .Net</Title>
    <Description>IPNetwork C# library take care of complex network, ip, ipv4, ipv6, netmask, cidr, subnet, subnetting, supernet and supernetting calculation for .Net developpers. It works with IPv4 and IPv6 as well. It is written in C# for .NetStandard and coreclr and has a light and clean API and is fully unit tested.</Description>
    <PackageSummary>IPNetwork utility classes for .Net</PackageSummary>
    <authors>Luc Dvchosal</authors>
    <owners>Luc Dvchosal</owners>
    <copyright>Copyright 2018</copyright>
    <SignAssembly>True</SignAssembly>
    <SignAssembly Condition=" '$(OS)' != 'Windows_NT' ">false</SignAssembly>
    <AssemblyOriginatorKeyFile>System.Net.IPNetwork.snk</AssemblyOriginatorKeyFile>
    <RepositoryUrl>https://github.com/lduchosal/ipnetwork.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>

	</PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|netstandard1.3|AnyCPU'">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateSerializationAssemblies>Auto</GenerateSerializationAssemblies>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>
  
  <PropertyGroup>
	<DefineConstants Condition="'$(OS)' != 'Windows_NT'">$(DefineConstants);TRAVISCI</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition="'$(TargetFramework)'=='net40' OR '$(TargetFramework)'=='net45' OR '$(TargetFramework)'=='net46'">
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
  </ItemGroup>
  
  <ItemGroup>
    <None Include="..\..\LICENSE" Pack="true" PackagePath="." />
  </ItemGroup>
</Project>